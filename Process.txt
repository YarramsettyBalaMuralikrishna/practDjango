Running Server - python manage.py runserver

virtualEnv -> python -m venv pract - coorect if any errors exists
1. cd djangoProjects
django-admin startproject <projectName>  -> project creation
virtualEnv through vscode -> workon <envName>
app creation -> python manage.py <appName>
starting app -> python manage.py startapp <appName>


setting.py include app which are created.
        INSTALLED_APPS = [
            ...,
            <appName>,] # is it mandatory or not check when more apps are present and justify
from django.views.decorators.csrf import csrf_exempt

@csrf_exempt 
https://www.django-rest-framework.org/api-guide/views/#api_view  refer for django rest api


------------------- receving data from url
print(request.body)
if we get data in this formt b'{"name":"bala","password":"asdasf"}'  we are receving the data
in an encoded format we should decode that before encoding it

from django.http import HttpResponse, JsonResponse
import json

---- we can do by this
data = json.loads(request.body.decode('utf-8'))
    name, password = data.get('name'), data.get('password')
    print(name, password)

----------------------table creation through models

class User(models.Model):
    userName = models.CharField(max_length=50)
    password = models.CharField(max_length=30)
    ..... more fields

creation of table which has similar fields of this class
->python manage.py makemigrations  - detect changes 
->python manage.py migrate

----------------------------------------- 
from .models import *
admin.site.register(User) 
----------------------------------------
->for reflection in admin portal even if its not present table wil 
    be created but it will not be reflected in admin portal
-----------------------------------------
credentials of admin portal -  python manage.py createsuperuser
--------------------------------

serializers is present in django-restframework
so first import them

pip install djangorestframework
pip install markdown       # Markdown support for the browsable API.
pip install django-filter  # Filtering support

add django-restframework in INSTALLED_APPS (present in settings)

INSTALLED_APPS = [
    .....,
    'rest_framework',
]

create a new file named seriailizers.py 
seriailizers.py
------- code -------
from rest_framework import serializers
from .models import User

class userSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = '__all__'

now import this seriailizer in our view'

----- views.py ------
now import that serializer which is written for that Model
-> from .serializers import userSerializer
-> serializer = userSerializer(..., many = T/F)
-> allData = serializer.data
print this data to look at the structure
 
    
